/* ===== VISUAL ENHANCEMENTS CSS ===== */

/* Advanced Background Patterns */
.hero::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: 
        radial-gradient(circle at 25% 25%, rgba(0, 212, 255, 0.15) 0%, transparent 50%),
        radial-gradient(circle at 75% 75%, rgba(255, 0, 128, 0.15) 0%, transparent 50%),
        radial-gradient(circle at 50% 50%, rgba(0, 255, 136, 0.1) 0%, transparent 70%),
        linear-gradient(45deg, transparent 30%, rgba(0, 212, 255, 0.05) 50%, transparent 70%);
    animation: backgroundShift 20s ease-in-out infinite;
    z-index: -1;
}

@keyframes backgroundShift {
    0%, 100% { 
        background-position: 0% 0%, 100% 100%, 50% 50%, 0% 0%;
    }
    25% { 
        background-position: 100% 0%, 0% 100%, 25% 75%, 100% 0%;
    }
    50% { 
        background-position: 100% 100%, 0% 0%, 75% 25%, 100% 100%;
    }
    75% { 
        background-position: 0% 100%, 100% 0%, 50% 50%, 0% 100%;
    }
}

/* Enhanced Glassmorphism Cards */
.glass-card {
    background: rgba(255, 255, 255, 0.08);
    backdrop-filter: blur(20px);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 20px;
    box-shadow: 
        0 8px 32px rgba(0, 0, 0, 0.3),
        inset 0 1px 0 rgba(255, 255, 255, 0.1);
    position: relative;
    overflow: hidden;
}

.glass-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent);
    transition: left 0.8s ease;
}

.glass-card:hover::before {
    left: 100%;
}

/* Cyberpunk Grid Overlay */
.cyber-grid-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-image: 
        linear-gradient(rgba(0, 212, 255, 0.1) 1px, transparent 1px),
        linear-gradient(90deg, rgba(0, 212, 255, 0.1) 1px, transparent 1px);
    background-size: 30px 30px;
    animation: gridFlow 15s linear infinite;
    pointer-events: none;
    z-index: -1;
}

@keyframes gridFlow {
    0% { transform: translate(0, 0); }
    100% { transform: translate(30px, 30px); }
}

/* Holographic Borders */
.holographic-border {
    position: relative;
    border: 2px solid transparent;
    background: linear-gradient(var(--background), var(--background)) padding-box,
                linear-gradient(45deg, var(--primary), var(--secondary), var(--accent), var(--primary)) border-box;
    border-radius: 15px;
}

.holographic-border::before {
    content: '';
    position: absolute;
    top: -2px;
    left: -2px;
    right: -2px;
    bottom: -2px;
    background: linear-gradient(45deg, var(--primary), var(--secondary), var(--accent), var(--primary));
    background-size: 200% 200%;
    border-radius: 15px;
    z-index: -1;
    animation: holographicShift 3s ease-in-out infinite;
}

@keyframes holographicShift {
    0%, 100% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
}

/* Neon Text Glow */
.neon-text {
    color: var(--primary);
    text-shadow: 
        0 0 5px currentColor,
        0 0 10px currentColor,
        0 0 15px currentColor,
        0 0 20px currentColor;
    animation: neonPulse 2s ease-in-out infinite alternate;
}

@keyframes neonPulse {
    from {
        text-shadow: 
            0 0 5px currentColor,
            0 0 10px currentColor,
            0 0 15px currentColor,
            0 0 20px currentColor;
    }
    to {
        text-shadow: 
            0 0 2px currentColor,
            0 0 5px currentColor,
            0 0 8px currentColor,
            0 0 12px currentColor;
    }
}

/* Floating Particles Enhanced */
.floating-particle {
    position: absolute;
    width: 4px;
    height: 4px;
    background: var(--primary);
    border-radius: 50%;
    animation: floatParticle 8s linear infinite;
    box-shadow: 0 0 10px currentColor;
}

.floating-particle:nth-child(2n) {
    background: var(--secondary);
    animation-duration: 12s;
    animation-delay: -2s;
}

.floating-particle:nth-child(3n) {
    background: var(--accent);
    animation-duration: 10s;
    animation-delay: -4s;
}

@keyframes floatParticle {
    0% {
        transform: translateY(100vh) translateX(0) rotate(0deg);
        opacity: 0;
    }
    10% {
        opacity: 1;
    }
    90% {
        opacity: 1;
    }
    100% {
        transform: translateY(-100px) translateX(100px) rotate(360deg);
        opacity: 0;
    }
}

/* Advanced Button Styles */
.btn-futuristic {
    position: relative;
    background: transparent;
    border: 2px solid var(--primary);
    color: var(--primary);
    padding: 1rem 2rem;
    border-radius: 0;
    clip-path: polygon(0 0, calc(100% - 20px) 0, 100% 100%, 20px 100%);
    transition: all 0.3s ease;
    overflow: hidden;
}

.btn-futuristic::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: var(--primary);
    transition: left 0.3s ease;
    z-index: -1;
}

.btn-futuristic:hover {
    color: var(--background);
    box-shadow: 0 0 20px var(--primary);
}

.btn-futuristic:hover::before {
    left: 0;
}

/* Morphing Shapes */
.morphing-shape {
    width: 100px;
    height: 100px;
    background: linear-gradient(45deg, var(--primary), var(--secondary));
    border-radius: 30% 70% 70% 30% / 30% 30% 70% 70%;
    animation: morphShape 8s ease-in-out infinite;
}

@keyframes morphShape {
    0%, 100% { border-radius: 30% 70% 70% 30% / 30% 30% 70% 70%; }
    25% { border-radius: 58% 42% 75% 25% / 76% 46% 54% 24%; }
    50% { border-radius: 50% 50% 33% 67% / 55% 27% 73% 45%; }
    75% { border-radius: 33% 67% 58% 42% / 63% 68% 32% 37%; }
}

/* Glitch Text Effect */
.glitch-text {
    position: relative;
    color: var(--primary);
    font-weight: bold;
}

.glitch-text::before,
.glitch-text::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}

.glitch-text::before {
    animation: glitch-1 0.5s infinite;
    color: var(--accent);
    z-index: -1;
}

.glitch-text::after {
    animation: glitch-2 0.5s infinite;
    color: var(--secondary);
    z-index: -2;
}

@keyframes glitch-1 {
    0%, 14%, 15%, 49%, 50%, 99%, 100% {
        transform: translate(0);
    }
    15%, 49% {
        transform: translate(-2px, 2px);
    }
}

@keyframes glitch-2 {
    0%, 20%, 21%, 62%, 63%, 99%, 100% {
        transform: translate(0);
    }
    21%, 62% {
        transform: translate(2px, -2px);
    }
}

/* Liquid Loading Animation */
.liquid-loader {
    width: 60px;
    height: 60px;
    border-radius: 50%;
    background: var(--primary);
    position: relative;
    animation: liquidPulse 2s ease-in-out infinite;
}

.liquid-loader::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 80%;
    height: 80%;
    background: var(--background);
    border-radius: 50%;
    transform: translate(-50%, -50%);
    animation: liquidWave 2s ease-in-out infinite;
}

@keyframes liquidPulse {
    0%, 100% { transform: scale(1); }
    50% { transform: scale(1.2); }
}

@keyframes liquidWave {
    0%, 100% { 
        border-radius: 50%;
        transform: translate(-50%, -50%) rotate(0deg);
    }
    25% { 
        border-radius: 60% 40% 60% 40%;
        transform: translate(-50%, -50%) rotate(90deg);
    }
    50% { 
        border-radius: 40% 60% 40% 60%;
        transform: translate(-50%, -50%) rotate(180deg);
    }
    75% { 
        border-radius: 60% 40% 60% 40%;
        transform: translate(-50%, -50%) rotate(270deg);
    }
}

/* Hexagon Grid Pattern */
.hexagon-grid {
    background-image: 
        radial-gradient(circle at 50% 50%, rgba(0, 212, 255, 0.1) 2px, transparent 2px);
    background-size: 30px 30px;
    background-position: 0 0, 15px 15px;
    animation: hexagonShift 20s linear infinite;
}

@keyframes hexagonShift {
    0% { background-position: 0 0, 15px 15px; }
    100% { background-position: 30px 30px, 45px 45px; }
}

/* Scan Line Effect */
.scan-lines {
    position: relative;
    overflow: hidden;
}

.scan-lines::before {
    content: '';
    position: absolute;
    top: -100%;
    left: 0;
    width: 100%;
    height: 2px;
    background: linear-gradient(90deg, transparent, var(--primary), transparent);
    animation: scanLine 3s linear infinite;
}

@keyframes scanLine {
    0% { top: -100%; }
    100% { top: 100%; }
}

/* Energy Orb */
.energy-orb {
    width: 20px;
    height: 20px;
    border-radius: 50%;
    background: radial-gradient(circle, var(--primary) 0%, transparent 70%);
    box-shadow: 
        0 0 20px var(--primary),
        0 0 40px var(--primary),
        0 0 60px var(--primary);
    animation: energyPulse 2s ease-in-out infinite;
}

@keyframes energyPulse {
    0%, 100% { 
        transform: scale(1);
        opacity: 1;
    }
    50% { 
        transform: scale(1.5);
        opacity: 0.7;
    }
}

/* Circuit Board Pattern */
.circuit-pattern {
    background-image: 
        linear-gradient(90deg, rgba(0, 212, 255, 0.1) 1px, transparent 1px),
        linear-gradient(rgba(0, 212, 255, 0.1) 1px, transparent 1px),
        radial-gradient(circle at 20px 20px, rgba(0, 212, 255, 0.2) 2px, transparent 2px);
    background-size: 40px 40px, 40px 40px, 40px 40px;
    animation: circuitFlow 25s linear infinite;
}

@keyframes circuitFlow {
    0% { background-position: 0 0, 0 0, 0 0; }
    100% { background-position: 40px 40px, 40px 40px, 40px 40px; }
}

/* Holographic Card Effect */
.holographic-card {
    background: linear-gradient(135deg, 
        rgba(255, 255, 255, 0.1) 0%,
        rgba(255, 255, 255, 0.05) 50%,
        rgba(255, 255, 255, 0.1) 100%);
    backdrop-filter: blur(20px);
    border: 1px solid rgba(255, 255, 255, 0.2);
    position: relative;
    overflow: hidden;
}

.holographic-card::before {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: conic-gradient(
        from 0deg,
        transparent,
        var(--primary),
        transparent,
        var(--secondary),
        transparent,
        var(--accent),
        transparent
    );
    animation: holographicRotate 4s linear infinite;
    opacity: 0.1;
}

@keyframes holographicRotate {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}

/* Data Stream Effect */
.data-stream {
    position: relative;
    overflow: hidden;
}

.data-stream::after {
    content: '01001001 01101110 01101110 01101111 01110110 01100001 01110100 01101001 01101111 01101110';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    color: var(--primary);
    font-family: 'JetBrains Mono', monospace;
    font-size: 0.8rem;
    opacity: 0.3;
    white-space: nowrap;
    animation: dataFlow 10s linear infinite;
    display: flex;
    align-items: center;
}

@keyframes dataFlow {
    0% { left: -100%; }
    100% { left: 100%; }
}

/* Quantum Dots */
.quantum-dots {
    position: relative;
}

.quantum-dots::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 4px;
    height: 4px;
    background: var(--primary);
    border-radius: 50%;
    box-shadow: 
        0 0 0 0 var(--primary),
        20px 0 0 0 var(--secondary),
        -20px 0 0 0 var(--accent),
        0 20px 0 0 var(--primary),
        0 -20px 0 0 var(--secondary);
    animation: quantumSpin 3s ease-in-out infinite;
    transform: translate(-50%, -50%);
}

@keyframes quantumSpin {
    0%, 100% { 
        transform: translate(-50%, -50%) rotate(0deg) scale(1);
    }
    50% { 
        transform: translate(-50%, -50%) rotate(180deg) scale(1.5);
    }
}

/* Neural Network Lines */
.neural-network {
    position: relative;
    overflow: hidden;
}

.neural-network::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-image: 
        linear-gradient(45deg, transparent 40%, rgba(0, 212, 255, 0.1) 50%, transparent 60%),
        linear-gradient(-45deg, transparent 40%, rgba(0, 255, 136, 0.1) 50%, transparent 60%);
    background-size: 100px 100px;
    animation: neuralPulse 4s ease-in-out infinite;
}

@keyframes neuralPulse {
    0%, 100% { 
        background-position: 0 0, 0 0;
        opacity: 0.5;
    }
    50% { 
        background-position: 100px 100px, -100px -100px;
        opacity: 1;
    }
}

/* Cyberpunk Text Styling */
.cyberpunk-text {
    font-family: 'Orbitron', sans-serif;
    font-weight: 700;
    text-transform: uppercase;
    letter-spacing: 2px;
    background: linear-gradient(45deg, var(--primary), var(--secondary));
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    position: relative;
}

.cyberpunk-text::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    color: var(--accent);
    z-index: -1;
    animation: cyberpunkGlitch 3s ease-in-out infinite;
}

@keyframes cyberpunkGlitch {
    0%, 90%, 100% { 
        transform: translate(0);
        opacity: 0;
    }
    5%, 10% { 
        transform: translate(2px, 2px);
        opacity: 0.8;
    }
}

/* Matrix Code Rain */
.matrix-rain {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: -1;
    overflow: hidden;
}

.matrix-column {
    position: absolute;
    top: -100%;
    color: var(--primary);
    font-family: 'JetBrains Mono', monospace;
    font-size: 14px;
    animation: matrixFall linear infinite;
    opacity: 0.7;
}

@keyframes matrixFall {
    0% { 
        top: -100%;
        opacity: 0;
    }
    10% { 
        opacity: 0.7;
    }
    90% { 
        opacity: 0.7;
    }
    100% { 
        top: 100%;
        opacity: 0;
    }
}

/* Responsive Enhancements */
@media (max-width: 768px) {
    .holographic-card::before,
    .neural-network::before,
    .circuit-pattern {
        animation-duration: 10s;
    }
    
    .morphing-shape {
        width: 60px;
        height: 60px;
    }
    
    .quantum-dots::before {
        box-shadow: 
            0 0 0 0 var(--primary),
            10px 0 0 0 var(--secondary),
            -10px 0 0 0 var(--accent),
            0 10px 0 0 var(--primary),
            0 -10px 0 0 var(--secondary);
    }
}

/* High Performance Mode */
@media (prefers-reduced-motion: reduce) {
    .floating-particle,
    .energy-orb,
    .liquid-loader,
    .morphing-shape,
    .quantum-dots::before,
    .neural-network::before,
    .holographic-card::before,
    .matrix-column {
        animation: none;
    }
    
    .glitch-text::before,
    .glitch-text::after {
        display: none;
    }
}

/* Print Optimizations */
@media print {
    .floating-particle,
    .energy-orb,
    .scan-lines::before,
    .data-stream::after,
    .matrix-rain {
        display: none;
    }
    
    .glass-card,
    .holographic-card {
        background: rgba(255, 255, 255, 0.1);
        backdrop-filter: none;
    }
}

